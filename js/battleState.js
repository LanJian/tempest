// Generated by CoffeeScript 1.4.0
(function() {

  window.BattleState = (function() {

    function BattleState(player, enemy) {
      this.player = player;
      this.enemy = enemy;
      this.mode = 'select';
      this.turn = null;
      this.type = 'normal';
      this.init();
      this.winStatus = null;
    }

    BattleState.prototype.init = function() {};

    BattleState.prototype.endTurn = function() {
      var t;
      console.log('end turn');
      if (this.player.units.length <= 0) {
        console.log('Game OVER');
        Common.game.endGame('defeat');
        return;
      }
      if (this.enemy.units.length <= 0) {
        Common.game.endGame('victory');
        return;
      }
      if (this.turn === this.player) {
        this.turn = this.enemy;
        t = new Coffee2D.Text('Enemy Turn', 'blue', '40px Arial');
        t.setPosition(Common.cPanel.position.x + 300, Common.cPanel.position.y - 10);
        Common.game.floatText(t);
        this.enemy.resetTokens();
        return this.enemy.makeMoves();
      } else if (this.turn === this.enemy) {
        this.turn = this.player;
        t = new Coffee2D.Text('Your Turn', 'blue', '40px Arial');
        t.setPosition(Common.cPanel.position.x + 350, Common.cPanel.position.y - 10);
        Common.game.floatText(t);
        this.player.resetTokens();
        Common.battleField.setPlayerIP(this.player, Common.battleField.getPlayerIP(this.player) + 1);
        return console.log('init points', this.player.initiativePoints);
      }
    };

    BattleState.prototype.changeToMode = function(mode) {
      this.mode = mode;
      switch (this.mode) {
        case 'select':
          return Common.game.changeCursor('cursor/select.cur');
        case 'attack':
          return Common.game.changeCursor('cursor/attack.cur');
      }
    };

    return BattleState;

  })();

}).call(this);
