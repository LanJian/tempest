// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.TooltipPanel = (function(_super) {

    __extends(TooltipPanel, _super);

    function TooltipPanel(panelPosition, panelSize, state) {
      this.panelPosition = panelPosition;
      this.panelSize = panelSize;
      this.state = state;
      TooltipPanel.__super__.constructor.call(this, this.panelPosition.x, this.panelPosition.y, this.panelSize.w, this.panelSize.h);
      this.init();
      this.hide();
    }

    TooltipPanel.prototype.init = function() {
      this.initBackground();
      return this.addListener('updateTooltip', (function(evt) {
        var k, statText, v, y, _ref;
        if (evt.item != null) {
          this.reset();
          y = 15;
          _ref = evt.item.stats;
          for (k in _ref) {
            v = _ref[k];
            statText = new Coffee2D.Text("" + k + ": " + v, 'red', '13px Verdana');
            statText.setPosition(30, y);
            y += 15;
            this.addChild(statText);
          }
          return this.show();
        } else {
          return this.hide();
        }
      }).bind(this));
    };

    TooltipPanel.prototype.reset = function() {
      return this.children = [this.bgImage];
    };

    TooltipPanel.prototype.initBackground = function() {
      this.bgImage = new Coffee2D.Image('img/tooltipBG.png');
      this.bgImage.setSize(this.size.w, this.size.h);
      return this.addChild(this.bgImage);
    };

    return TooltipPanel;

  })(Component);

}).call(this);
